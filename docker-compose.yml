services:
  backend:
    build:
      context: ./backend
    env_file:
      - .env
    ports:
      - "5000:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development      
      Token__Secret: ${TOKEN_SECRET}
      Token__Issuer: ${TOKEN_ISSUER}
      Token__Audience: ${TOKEN_AUDIENCE}
      ConnectionStrings__Default: Server=${DATABASE_SERVER};Database=${DATABASE_NAME};User ID=${DATABASE_USER_ID};Password=${DATABASE_PASSWORD};TrustServerCertificate=True
      Minio__Endpoint: ${MINIO_ENDPOINT}
      Minio__AccessKey: ${MINIO_ACCESS_KEY}
      Minio__SecretKey: ${MINIO_SECRET_KEY}
    restart: 
      unless-stopped
    depends_on:
      - minio
      - sqlserver
    volumes:
      - ./backend/Logs:/app/Logs
    networks:
      - app-network
    command: >
        /app/wait-for-it.sh ${DATABASE_SERVER}:1433 --timeout=30 --
        /app/wait-for-it.sh ${MINIO_ENDPOINT} --timeout=30 --
        dotnet Emuhub.API.dll

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ${DATABASE_PASSWORD}
      MSSQL_PID: "Developer"
    ports:
      - "1433:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
    networks:
      - app-network

  frontend:
    build:
      context: ./webapp
    ports:
      - "5173:5173"
    depends_on:
      - backend

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000" # API
      - "9001:9001" # Web UI
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    volumes:
      - ./minio-data:/data
    command: server --console-address ":9001" /data

networks:
  app-network:

volumes:
  sqlserver-data: